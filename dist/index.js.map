{
  "version": 3,
  "sources": ["../node_modules/turndown/lib/turndown.browser.cjs.js", "../src/index.js"],
  "sourcesContent": ["'use strict';\n\nfunction extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (root.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\nmodule.exports = TurndownService;\n", "const TurndownService = require('turndown'); // Assuming Turndown is loaded\n\nfunction run() {\n  // Get user input using Host.inputString()\n  const input = Host.inputString();\n\n  // Check if input is a URL\n  if (input.startsWith('http')) {\n    try {\n      // Fetch content using Http.request\n      const request = {\n        method: \"GET\",\n        url: input,\n      };\n      const response = Http.request(request);\n      if (response.status !== 200) {\n        throw new Error(`Got non 200 response ${response.status}`);\n      }\n\n      // Parse HTML with Turndown\n      const turndown = new TurndownService();\n      const markdown = turndown.turndown(response.body);\n\n      // Extract content from specific tags (modify as needed)\n      const texts = [];\n      markdown.querySelectorAll('article').forEach((tag) => {\n        texts.push(...tag.querySelectorAll(text => text.textContent));\n        tag.remove();\n      });\n      markdown.querySelectorAll('p').forEach((tag) => {\n        texts.push(...tag.querySelectorAll(text => text.textContent));\n        tag.remove();\n      });\n\n      // Output the extracted content as markdown\n      Host.outputString(texts.join('\\n\\n'));\n    } catch (error) {\n      Host.outputString(`Error fetching or parsing content: ${error.message}`);\n    }\n  } else {\n    // Plain text input, output directly\n    Host.outputString(input);\n  }\n}\n\nmodule.exports = { run };"],
  "mappings": "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",
  "names": ["exports", "module", "rules", "isBlock", "isVoid", "node", "next", "root", "TurndownService"]
}
